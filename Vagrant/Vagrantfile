Vagrant.configure("2") do |config|
  # Specify the base box image to use (Ubuntu Jammy 22.04 LTS 64-bit)
  config.vm.box = "ubuntu/jammy64"

  # Configure the VM to use a public network with DHCP and automatically set the default route
  config.vm.network "public_network", use_dhcp_assigned_default_route: true

  # Sync a folder from the host ("./shared/") to the guest VM at "/shared"
  config.vm.synced_folder "./shared/", "/shared"

  # Provision the VM with a shell script (runs as non-root user)
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    # Update package lists and upgrade installed packages
    sudo apt update
    sudo apt upgrade -y
    
    # Install necessary packages: nginx (web server), lynx (text-based browser), vim (editor),
    # git (version control), wget (file downloader), unzip (archive tool),
    # dh-make and devscripts (for Debian packaging tools)
    sudo apt install -y nginx lynx vim git wget unzip dh-make devscripts

    # Find the first IPv4 address on the VM that matches private IP ranges (10.1.x.x or 192.168.x.x)
    IPADDR=$(ip -4 a | grep inet | awk '{print $2}' | cut -d "/" -f 1 | grep -E "10\\.1\\.|192\\.168\\." | head -n 1)

    # Create a directory for the website files using the IP address as folder name
    sudo mkdir -p /var/www/$IPADDR/html
    
    # Copy all contents from the shared folder's "nasa" directory to the web root directory
    sudo cp -r /shared/nasa/* /var/www/$IPADDR/html/

    # Create an nginx site configuration file using a "here document"
    # Configure nginx to serve the website from /var/www/$IPADDR/html
sudo tee /etc/nginx/sites-available/$IPADDR > /dev/null <<EOF
server {
    listen 80;
    listen [::]:80;

    root $TARGET_DIR;
    index index.html index.htm index.nginx-debian.html;

    server_name $IPADDR www.$IPADDR;

    location / {
        try_files \\\$uri \\\$uri/ =404;
    }
}
EOF


    # Change ownership of the web root files to the vagrant user and group
    sudo chown -R vagrant:vagrant /var/www/$IPADDR/html

    # Set permissions for the web root directory and its contents
    sudo chmod -R 755 /var/www/$IPADDR

    # Enable the new nginx site by creating a symlink in sites-enabled
    sudo ln -sf /etc/nginx/sites-available/$IPADDR /etc/nginx/sites-enabled/

    # If no suitable IP address was found, print error and exit the script
    if [ -z "$IPADDR" ]; then
      echo "No suitable IP found!"
      exit 1
    fi

    # Print the selected IP address to the console
    echo "Your IP is \e[42m$IPADDR\e[49m"

    # Restart nginx to apply the new configuration
    sudo systemctl restart nginx
  SHELL
end
